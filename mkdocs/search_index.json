{
    "docs": [
        {
            "location": "/", 
            "text": "(WORK IN PROGRESS) Zero Backend (\u00d8b)\n\n\nI was bored building and managing custom backends, so i built this.\n\n\n\u00d8b will redefine the way you think about backend and backoffice code.\n\n\nWhat can you build with \u00d8b ?\n\n\nFirst, you start by defining your data, then you add backend/backoffice features to your site.\n\n\nSince you shape your own data, there are few limits to what you can build.\n\n\nWith this features, you could for example build:\n\n\n\n\necommerce web site\n\n\nblog / magazine\n\n\nprofessional folio\n\n\ncorporate website\n\n\nreal estate agency site\n\n\nagency site/folio\n\n\nrestaurant website with online booking\n\n\nclinic website with online appointment booking\n\n\nevents website with participation booking\n\n\ncoupon website\n\n\nmarketplace\n\n\ndashboard for your client (we call it middleoffice)\n\n\n\n\nMore importantly, you can combine it all together. Let's say you want to build an eshop with a blog. Well, no issues there, it works perfectly together. \n\n\nWho is it for ?\n\n\nfull stack developpers\n\n\n\n\nwho care about delivering faster results to their clients\n\n\nwill discover new way of managing backend stack\n\n\n\n\nfrontend developpers\n\n\n\n\nwho don't want to write backend code\n\n\nwill be able to build somewhat complex web sites with \u00d8 backend code\n\n\n\n\nStatic by default\n\n\nWith classic set of full stack and backend frameworks, we usualy make every page dynamic by default, even if it doesn't have to be.\n\n\nBecause of everything is dynamic, we have to worry about things like:\n\n\n\n\nscaling / caching / optimisations\n\n\nsecurity\n\n\nserver infrastructure\n\n\nmonitoring\n\n\nbackups / disaster recovery\n\n\n...\n\n\n\n\nZeroBackend uses static generated approach by default, and implements dynamic features as services.\n\n\nServices = Hosted, fully managed services with REST APIs and production ready client libraries.\n\n\nEach service has it's own backoffice to manage data.\n\n\nTo design ZeroBackend, we considered many use cases. Please check our case studies:\n\n\n\n\nCase Study: Small to Medium size Eshop\n\n\nCase Study: Blog\n\n\nmore to come...\n\n\n\n\nNot your your grandma's CMS\n\n\nAuthors of ZeroBackend hate pretty much any open source CMS with passion for many technical reasons.\n\n\nA lot of efforts were put into ZeroBackend to avoid errors made by packages like Wordpress, Prestashop or Magento.\n\n\nWe also tried to avoid \nthe boring steps\n found in modern frameworks, so you can enjoy the development process.\n\n\nHere are few principles we care about:\n\n\n\n\n\u00d8b user must \nnever\n touch the backend and backoffice code\n\n\n\u00d8b user can customize frontoffice from A to Z\n\n\n\u00d8b doesn't assume the structure of your data, you define it yourself\n\n\n\u00d8b generates API in real time for each data entity you create, so advanced users can easily use their data from anywhere\n\n\n\u00d8b frees you from managing a database, servers, backups, ...\n\n\n\u00d8b will host your static site. But you can also host it yourself, if you wish.\n\n\n\u00d8b plays well with other backed as service. Want to use Disqus for your comments or Firebase for realtime communications ? No problem, it just works\n\n\n\u00d8b takes care of the Backend code, APIs and Backoffice UIs.\n\n\n\u00d8b provides you a powerful static site generator. However you can use your own if you wish, simply plug to our APIs and start building.\n\n\nYou do the frontend (don't worry, we have project templates to get you started)", 
            "title": "Home"
        }, 
        {
            "location": "/#work-in-progress-zero-backend-b", 
            "text": "I was bored building and managing custom backends, so i built this.  \u00d8b will redefine the way you think about backend and backoffice code.", 
            "title": "(WORK IN PROGRESS) Zero Backend (\u00d8b)"
        }, 
        {
            "location": "/#what-can-you-build-with-b", 
            "text": "First, you start by defining your data, then you add backend/backoffice features to your site.  Since you shape your own data, there are few limits to what you can build.  With this features, you could for example build:   ecommerce web site  blog / magazine  professional folio  corporate website  real estate agency site  agency site/folio  restaurant website with online booking  clinic website with online appointment booking  events website with participation booking  coupon website  marketplace  dashboard for your client (we call it middleoffice)   More importantly, you can combine it all together. Let's say you want to build an eshop with a blog. Well, no issues there, it works perfectly together.", 
            "title": "What can you build with \u00d8b ?"
        }, 
        {
            "location": "/#who-is-it-for", 
            "text": "full stack developpers   who care about delivering faster results to their clients  will discover new way of managing backend stack   frontend developpers   who don't want to write backend code  will be able to build somewhat complex web sites with \u00d8 backend code", 
            "title": "Who is it for ?"
        }, 
        {
            "location": "/#static-by-default", 
            "text": "With classic set of full stack and backend frameworks, we usualy make every page dynamic by default, even if it doesn't have to be.  Because of everything is dynamic, we have to worry about things like:   scaling / caching / optimisations  security  server infrastructure  monitoring  backups / disaster recovery  ...   ZeroBackend uses static generated approach by default, and implements dynamic features as services.  Services = Hosted, fully managed services with REST APIs and production ready client libraries.  Each service has it's own backoffice to manage data.  To design ZeroBackend, we considered many use cases. Please check our case studies:   Case Study: Small to Medium size Eshop  Case Study: Blog  more to come...", 
            "title": "Static by default"
        }, 
        {
            "location": "/#not-your-your-grandmas-cms", 
            "text": "Authors of ZeroBackend hate pretty much any open source CMS with passion for many technical reasons.  A lot of efforts were put into ZeroBackend to avoid errors made by packages like Wordpress, Prestashop or Magento.  We also tried to avoid  the boring steps  found in modern frameworks, so you can enjoy the development process.  Here are few principles we care about:   \u00d8b user must  never  touch the backend and backoffice code  \u00d8b user can customize frontoffice from A to Z  \u00d8b doesn't assume the structure of your data, you define it yourself  \u00d8b generates API in real time for each data entity you create, so advanced users can easily use their data from anywhere  \u00d8b frees you from managing a database, servers, backups, ...  \u00d8b will host your static site. But you can also host it yourself, if you wish.  \u00d8b plays well with other backed as service. Want to use Disqus for your comments or Firebase for realtime communications ? No problem, it just works  \u00d8b takes care of the Backend code, APIs and Backoffice UIs.  \u00d8b provides you a powerful static site generator. However you can use your own if you wish, simply plug to our APIs and start building.  You do the frontend (don't worry, we have project templates to get you started)", 
            "title": "Not your your grandma's CMS"
        }, 
        {
            "location": "/case-study/eshop/", 
            "text": "Case Study: Small to Medium size Eshop\n\n\nLet's take a look at typical ecommerce shop.\n\n\nWhat sections have to be updated in real time ?\n\n\nIn other words, what sections has to be dynamic ?\n\n\n\n\nshopping cart\n\n\nprice / product quantity / sales\n\n\npayment processing\n\n\n\"my orders\" page\n\n\n\"my addresses\" page\n\n\n\"track my order\" page\n\n\n\"customer support\" form/page/chat\n\n\n\n\nPretty much any other customer facing feature or page can be static, and automaticaly regenerated every hour/day/week.", 
            "title": "Eshop"
        }, 
        {
            "location": "/case-study/eshop/#case-study-small-to-medium-size-eshop", 
            "text": "Let's take a look at typical ecommerce shop.  What sections have to be updated in real time ?  In other words, what sections has to be dynamic ?   shopping cart  price / product quantity / sales  payment processing  \"my orders\" page  \"my addresses\" page  \"track my order\" page  \"customer support\" form/page/chat   Pretty much any other customer facing feature or page can be static, and automaticaly regenerated every hour/day/week.", 
            "title": "Case Study: Small to Medium size Eshop"
        }, 
        {
            "location": "/case-study/blog/", 
            "text": "Case Study: Blog\n\n\nIf you take any blog, the #1 enduser facing dynamic feature is the comment system.\n\n\nDisqus\n is a comment system as a service.\n\n\nOn a technical level, disqus changed the way we think about comment implementation.\n\n\nNow you have a choice: spend few days implementing a comment system or copy paste a piece of HTML/JS code on your web site to get an awesome, \nfully featured\n comment system in minutes with a great dashboard to visualise what happens in your community.\n\n\nI'll let you guess which way most developpers will go if they want fast result. Disqus is everywhere now.\n\n\nAccording to a study by Lijit, Disqus was used by 75% of websites in March 2011 who used a third-party commenting or discussion system.\n\n\nPretty much anything else in a blog can be static and regenerated every time you make a change in backoffice.", 
            "title": "Blog"
        }, 
        {
            "location": "/case-study/blog/#case-study-blog", 
            "text": "If you take any blog, the #1 enduser facing dynamic feature is the comment system.  Disqus  is a comment system as a service.  On a technical level, disqus changed the way we think about comment implementation.  Now you have a choice: spend few days implementing a comment system or copy paste a piece of HTML/JS code on your web site to get an awesome,  fully featured  comment system in minutes with a great dashboard to visualise what happens in your community.  I'll let you guess which way most developpers will go if they want fast result. Disqus is everywhere now.  According to a study by Lijit, Disqus was used by 75% of websites in March 2011 who used a third-party commenting or discussion system.  Pretty much anything else in a blog can be static and regenerated every time you make a change in backoffice.", 
            "title": "Case Study: Blog"
        }, 
        {
            "location": "/examples/blog/", 
            "text": "Here is an example of simple \nblog\n configuration entity files\n\n\nPost\n\n\n{\n  \nlabel\n: \nPost\n,\n  \nname\n: \npost\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nTitle\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nSource URL\n,\n      \nname\n: \nsource_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nShort description\n,\n      \nname\n: \ndescription\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \ntext\n,\n        \ncreate\n: \ntext\n,\n        \nedit\n: \ntext\n\n      }\n    },\n    {\n      \nlabel\n: \nContent\n,\n      \nname\n: \ncontent\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nhtml\n,\n        \ncreate\n: \ntext\n,\n        \nedit\n: \ntext\n\n      }\n    },\n    {\n      \nlabel\n: \nPublish date\n,\n      \nname\n: \npublished_at\n,\n      \ndataType\n: \ndate\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \ndate\n,\n        \ncreate\n: \ndate\n,\n        \nedit\n: \ndate\n\n      }\n    },\n    {\n      \nlabel\n: \nCategories\n,\n      \nname\n: \ncategories\n,\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \npost_x_category\n,\n      \ndataRefEntity\n: \ncategory\n,\n      \ndataRefField\n: \nlabel\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nTags\n,\n      \nname\n: \ntags\n,\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \npost_x_tag\n,\n      \ndataRefEntity\n: \ntag\n,\n      \ndataRefField\n: \nlabel\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nCover\n,\n      \nname\n: \ncover_image_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nVimeo URL\n,\n      \nname\n: \ncover_vimeo_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nYoutube URL\n,\n      \nname\n: \ncover_youtube_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}\n\n\n\n\nCategory\n\n\n{\n  \nlabel\n: \nCategory\n,\n  \nname\n: \ncategory\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nCategory title\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nPosts\n,\n      \nname\n: \nposts\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \npost_x_category\n,\n      \ndataRefEntity\n: \npost\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}\n\n\n\n\nTag\n\n\n{\n  \nlabel\n: \nTag\n,\n  \nname\n: \ntag\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nTag\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nPosts\n,\n      \nname\n: \nposts\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \npost_x_tag\n,\n      \ndataRefEntity\n: \npost\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}", 
            "title": "Blog"
        }, 
        {
            "location": "/examples/blog/#post", 
            "text": "{\n   label :  Post ,\n   name :  post ,\n   fields : [\n    {\n       label :  Title ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Source URL ,\n       name :  source_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Short description ,\n       name :  description ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  text ,\n         create :  text ,\n         edit :  text \n      }\n    },\n    {\n       label :  Content ,\n       name :  content ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  html ,\n         create :  text ,\n         edit :  text \n      }\n    },\n    {\n       label :  Publish date ,\n       name :  published_at ,\n       dataType :  date ,\n       displayType : {\n         list :  none ,\n         show :  date ,\n         create :  date ,\n         edit :  date \n      }\n    },\n    {\n       label :  Categories ,\n       name :  categories ,\n       dataType :  reference_many ,\n       dataRefName :  post_x_category ,\n       dataRefEntity :  category ,\n       dataRefField :  label ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Tags ,\n       name :  tags ,\n       dataType :  reference_many ,\n       dataRefName :  post_x_tag ,\n       dataRefEntity :  tag ,\n       dataRefField :  label ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Cover ,\n       name :  cover_image_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Vimeo URL ,\n       name :  cover_vimeo_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Youtube URL ,\n       name :  cover_youtube_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Post"
        }, 
        {
            "location": "/examples/blog/#category", 
            "text": "{\n   label :  Category ,\n   name :  category ,\n   fields : [\n    {\n       label :  Category title ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Posts ,\n       name :  posts ,\n\n       dataType :  reference_many ,\n       dataRefName :  post_x_category ,\n       dataRefEntity :  post ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Category"
        }, 
        {
            "location": "/examples/blog/#tag", 
            "text": "{\n   label :  Tag ,\n   name :  tag ,\n   fields : [\n    {\n       label :  Tag ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Posts ,\n       name :  posts ,\n\n       dataType :  reference_many ,\n       dataRefName :  post_x_tag ,\n       dataRefEntity :  post ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Tag"
        }, 
        {
            "location": "/examples/folio/", 
            "text": "Here is an example of simple \nfolio\n configuration entity files\n\n\nProject\n\n\n{\n  \nlabel\n: \nProject\n,\n  \nname\n: \nproject\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nProject title\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nWebsite\n,\n      \nname\n: \nwebsite\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nClient\n,\n      \nname\n: \nclient\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nDescription\n,\n      \nname\n: \ndescription\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \ntext\n,\n        \ncreate\n: \ntext\n,\n        \nedit\n: \ntext\n\n      }\n    },\n    {\n      \nlabel\n: \nProject release date\n,\n      \nname\n: \nrelease_date\n,\n      \ndataType\n: \ndate\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \ndate\n,\n        \ncreate\n: \ndate\n,\n        \nedit\n: \ndate\n\n      }\n    },\n    {\n      \nlabel\n: \nCategories\n,\n      \nname\n: \ncategories\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \nproject_x_category\n,\n      \ndataRefEntity\n: \ncategory\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nTags\n,\n      \nname\n: \ntags\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \nproject_x_tag\n,\n      \ndataRefEntity\n: \ntag\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nCover\n,\n      \nname\n: \ncover_image_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nVimeo URL\n,\n      \nname\n: \ncover_vimeo_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nYoutube URL\n,\n      \nname\n: \ncover_youtube_url\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}\n\n\n\n\nCategory\n\n\n{\n  \nlabel\n: \nCategory\n,\n  \nname\n: \ncategory\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nCategory title\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nProjects\n,\n      \nname\n: \nprojects\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \nproject_x_category\n,\n      \ndataRefEntity\n: \nproject\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}\n\n\n\n\nTag\n\n\n{\n  \nlabel\n: \nTag\n,\n  \nname\n: \ntag\n,\n  \nfields\n: [\n    {\n      \nlabel\n: \nTag\n,\n      \nname\n: \ntitle\n,\n      \ndataType\n: \nstring\n,\n      \ndisplayType\n: {\n        \nlist\n: \nstring\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    },\n    {\n      \nlabel\n: \nProjects\n,\n      \nname\n: \nprojects\n,\n\n      \ndataType\n: \nreference_many\n,\n      \ndataRefName\n: \nproject_x_tag\n,\n      \ndataRefEntity\n: \nproject\n,\n      \ndataRefField\n: \ntitle\n,\n\n      \ndisplayType\n: {\n        \nlist\n: \nnone\n,\n        \nshow\n: \nstring\n,\n        \ncreate\n: \nstring\n,\n        \nedit\n: \nstring\n\n      }\n    }\n  ]\n}", 
            "title": "Folio"
        }, 
        {
            "location": "/examples/folio/#project", 
            "text": "{\n   label :  Project ,\n   name :  project ,\n   fields : [\n    {\n       label :  Project title ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Website ,\n       name :  website ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Client ,\n       name :  client ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Description ,\n       name :  description ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  text ,\n         create :  text ,\n         edit :  text \n      }\n    },\n    {\n       label :  Project release date ,\n       name :  release_date ,\n       dataType :  date ,\n       displayType : {\n         list :  none ,\n         show :  date ,\n         create :  date ,\n         edit :  date \n      }\n    },\n    {\n       label :  Categories ,\n       name :  categories ,\n\n       dataType :  reference_many ,\n       dataRefName :  project_x_category ,\n       dataRefEntity :  category ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Tags ,\n       name :  tags ,\n\n       dataType :  reference_many ,\n       dataRefName :  project_x_tag ,\n       dataRefEntity :  tag ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Cover ,\n       name :  cover_image_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Vimeo URL ,\n       name :  cover_vimeo_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Youtube URL ,\n       name :  cover_youtube_url ,\n       dataType :  string ,\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Project"
        }, 
        {
            "location": "/examples/folio/#category", 
            "text": "{\n   label :  Category ,\n   name :  category ,\n   fields : [\n    {\n       label :  Category title ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Projects ,\n       name :  projects ,\n\n       dataType :  reference_many ,\n       dataRefName :  project_x_category ,\n       dataRefEntity :  project ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Category"
        }, 
        {
            "location": "/examples/folio/#tag", 
            "text": "{\n   label :  Tag ,\n   name :  tag ,\n   fields : [\n    {\n       label :  Tag ,\n       name :  title ,\n       dataType :  string ,\n       displayType : {\n         list :  string ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    },\n    {\n       label :  Projects ,\n       name :  projects ,\n\n       dataType :  reference_many ,\n       dataRefName :  project_x_tag ,\n       dataRefEntity :  project ,\n       dataRefField :  title ,\n\n       displayType : {\n         list :  none ,\n         show :  string ,\n         create :  string ,\n         edit :  string \n      }\n    }\n  ]\n}", 
            "title": "Tag"
        }
    ]
}